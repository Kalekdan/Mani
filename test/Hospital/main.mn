# "lists";
load "./Hospital/patient.mn";
load "./Hospital/department.mn";

let patients = List();
let departments = List();
let filename;

fn departmentMenu() {
    let i = 0;
    while (i != 3) {
        say "1 - Create Department";
        say "2 - Delete Department";
        say NL + "3 - Back";

        // Need to ask for i here.
        i = ask("Enter option >> ");

        if (i == "1") {
            departmentAdd();
        } else if (i == "2") {
            departmentRemove();
        } else {
            break;
        }
    }
}
fn departmentFind(name) {
    if (departments.count() == 0) { return nil; }
    for (let i = 0; i < departments.count(); i++) {
        // say ANSI_CYAN + name + ANSI_RESET;
        // say ANSI_CYAN + departments.get(i).getName() + ANSI_RESET;
        if (departments.get(i).getName() == name) {
            say ANSI_RED + "FOUND" + ANSI_RESET;
            say departments.get(i);
            return true;
        }
    }
    return false;
}
fn departmentAdd() {
    let name = ask("Department Name: ");
    let res = departmentFind(name);
    say res;
    if (res == true) {
        say "Department with that name already exists!";
        return "";
    }
    let cap = ask("Department Capacity: ");
    let tlvl = ask("Department Treatment Level: ");

    let d = Department(name, cap, tlvl);
    departments.add(d);
}
fn departmentRemove() {
    let name = ask("Department Name: ");
    let res = departmentFind(name);
    if (res) {
        departments.del(res);
    } else {
        say "No department by that name!";
        return nil;
    }
}

fn patientMenu() {
    let i = 0;
    while (i != 4) {
        say "1 - Create Patient";
        say "2 - Delete Patient";
        say "3 - Re-assign Patient";
        say NL + "4 - Back";

        // Need to ask for i here.
        i = ask("Enter option >> ");

        if (i == "1") {
            patientAdd();
        } else if (i == "2") {
            patientRemove();
        } else if (i == "3") {
            patientMove();
        }
    }
}

fn patientAdd() {
    let dep = ask("Department name: ");
    say dep;
    let res = departmentFind(dep);
    say res;
    if (res == nil) {
        say "Department does not exist!";
        return "";
    }

    if (res.getCurrentAmount + 1 > res.getCapacity) {
        say "Department is full!";
        return "";
    }

    let first = ask("Patient First Name: ");
    let last = ask("Patient Last Name: ");
    let tlvl = ask("Patient Treatment Level: ");
    let btype = ask("Patient Blood Type: ");

    res = Department(first, last, tlvl, btype);
    departments.add(res);

}
fn patientRemove() {
    let id = ask("Patient ID: ");
    let res = patientFind(id);
    if (!res) {
        say "No patient by that ID!";
        return nil;
    }
    patients.del(res);
}
fn patientMove() {
    let id = ask("Patient ID: ");
    let res = patientFind(id);
    if (!res) {
        say "No patient by that ID!";
        return nil;
    }
    let did = ask("Department Name: ");
    let d = departmentFind(did);

    if (!d) {
        say "No department by that Name!";
        return nil;
    } else if (d.getCapacity == d.getCurrentAmount) {
        say "Department is already full!";
        return nil;
    } else if (d.getTreatment() > res.getTreatment()) {
        say "Department cannot treat this person!";
        return nil;
    }
    // If we got to here, it must all be good to go.
    for (let i = 0; i <= departments.count(); i++) {
        if (departments.get(i).hasPatient(res)) {
            departments.get(i).delPatient(res);
        }
    }

    // Adding the patient to a department now.
    d.addPatient(res);

}
fn patientFind(id) {
    if (patients.count() == 0) { return nil; }
    for (let i = 0; i <= patients.count(); i++) {
        if (patients.get(i).getID() == id) {
            return patients.get(i);
        }
    }
    return nil;
}

fn display() {
    if (departments.count() == 0) { return nil; }
    for (let i = 0; i < departments.count(); i++) {
        departments.get(i).show();
    }
}

fn saveFile() {}
fn loadFile() {}

fn eventChecker() {}
fn eventCreator() {}


fn main() {
    loadFile();
    let i = 0;
    while (i != 5) {
        say "1 - Department Menu";
        say "2 - Patient Menu";
        say "3 - Display";
        say "4 - Save";
        say NL;
        say "5 - Quit";

        // Need to ask for i here.
        i = ask("Enter option >> ");

        if (i == "1") {
            departmentMenu();
        } else if (i == "2") {
            patientMenu();
        } else if (i == "3") {
            display();
        } else if (i == "4") {
            saveFile();
        }
    }
}

main();