/*
Test program to demonstrate all
functionality using lists
*/
# "tester";
//Import lists library
# "lists";

let t <- Tester();
t.msg("TESTING LISTS");
say NL;

//Create a new list
t.msg("Create new list");
let myList = List();
t.match(myList.list, []);


//Add a string to the list
t.msg("Add item to list");
myList.add("stringOne");
t.match(myList.list, ["stringOne"]);

t.msg("Testing add lots function");
myList.addLots(["stringTwo", "stringThree"]);
t.match(myList.list, ["stringOne", "stringTwo", "stringThree"]);

//Add a different type to the list and show
t.msg("Adding a number");
myList.add(2);
t.match(myList.list, ["stringOne", "stringTwo", "stringThree", 2]);

//Replace an item in the list
t.msg("Replace item in list");
myList.replace(1, "replacementString");
t.match(myList.list, ["stringOne", "replacementString", "stringThree", 2]);


//Delete an item
t.msg("Delete item");
myList.del(1);
t.match(myList.list, ["stringOne", "stringThree", 2]);

t.msg("Reseting list");
myList.reset();
t.match(myList.list, []);

t.msg("String trimming");
myList.add("      spaceThenString");
myList.add("stringThenSpace     ");
myList.trimEach();
t.match(myList.list, ["spaceThenString", "stringThenSpace"]);

t.msg("Direct listing");
let directList = [1,2,3,4];
let norm = List();

norm.direct(directList);
t.match(norm.list, directList);

// This is the function we want to run each time.
t.msg("Testing forEach function");
let r <- List();
r.addLots([1, 2, 3, 4]);
fn someFunction(item) {
    result.add(item);
}

let result <- [];
r.forEach(someFunction); // This will run the "someFunction" parsing the data from the position in the list.
t.match(r.list, result);

t.results();